<Window x:Class="PathMet_V2.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PathMet_V2" 
        xmlns:esri="http://schemas.esri.com/arcgis/runtime/2013"
        mc:Ignorable="d"
        Title="MainWindow"
        WindowState="Maximized"
        WindowStyle="SingleBorderWindow"
        Icon="pathmet_icon.ico"
        Closing="Window_Closing" d:DesignWidth="1368" d:DesignHeight="912">

    <Window.Resources>

        <VisualBrush x:Key="RunNameHint" AlignmentX="Center" AlignmentY="Center" Stretch="None" >
            <VisualBrush.Visual>
                <Grid HorizontalAlignment="Center">
                    <TextBlock FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Gray" FontStyle="Italic" Opacity="1" Text="Enter Name of Run "/>
                </Grid>
            </VisualBrush.Visual>
        </VisualBrush>
        <VisualBrush x:Key="CommentBoxHint" AlignmentX="Left" AlignmentY="Top" Stretch="None" >
            <VisualBrush.Transform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform/>
                    <TranslateTransform Y="5"/>
                </TransformGroup>
            </VisualBrush.Transform>
            <VisualBrush.Visual>
                <Grid HorizontalAlignment="Left">
                    <TextBlock FontSize="16" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="Gray" FontStyle="Italic" Opacity="1" Text="Enter any comments about this run..."/>
                </Grid>
            </VisualBrush.Visual>
        </VisualBrush>
        <ControlTemplate x:Key="sensorStatusCheckBox" TargetType="{x:Type CheckBox}">
            <Grid HorizontalAlignment="Stretch">
                <Grid.RowDefinitions>
                    <RowDefinition Height="3*"/>
                    <RowDefinition Height="2*"/>
                </Grid.RowDefinitions>
                <Ellipse x:Name="outerCircle"  Stretch="Uniform" Grid.Row="0" StrokeThickness="3"  SnapsToDevicePixels="True" UseLayoutRounding="True" Width="35" Height="35" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center">
                    <Ellipse.Stroke>
                        <SolidColorBrush Color="#5CAADE"/>
                    </Ellipse.Stroke>
                </Ellipse>
                <Image Grid.Row="0" Visibility="Visible" x:Name="chkImg"  Source="checkmark.png" Width="20" SnapsToDevicePixels="True" Stretch="Uniform" UseLayoutRounding="True" Margin="0,2.5,0,0" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <ContentPresenter Grid.Row="1" VerticalAlignment="Bottom" HorizontalAlignment="Center"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsChecked" Value="True">
                    <Setter TargetName="chkImg" Property="Visibility" Value="Visible"/>
                </Trigger>
                <Trigger Property="IsChecked" Value="False">
                    <Setter TargetName="chkImg" Property="Visibility" Value="Hidden"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="LightGray"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="White"/>
        <Style x:Key="ButtonStyle1" TargetType="{x:Type Button}">
            <!--Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/-->
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <!--Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </-->
                            <!--Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </-->
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>


    <!-- Overall panel grid-->
    <Grid UseLayoutRounding="True" SnapsToDevicePixels="True">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <esri:MapView x:Name="MyMapView" Grid.Column="0"/>
        <TextBlock x:Name="StatusTxt" Grid.Column="0" Text="Choose a Starting Point" Margin="0" VerticalAlignment="Top" FontSize="20" Padding="5 2" UseLayoutRounding="False"/>
        <Border x:Name="downloadMapBtn_border" CornerRadius="10" Background="#FF5CAADE" VerticalAlignment="Bottom" Margin="5 5 5 25" HorizontalAlignment="Center" >
            <Border.Effect>
                <DropShadowEffect Direction="225" Opacity="0.6" BlurRadius="15" ShadowDepth="5"/>
            </Border.Effect>
            <Button x:Name="downloadMapBtn" Background="Transparent" Foreground="White" BorderBrush="Transparent" BorderThickness="0" Grid.Column="0" Content="Take Map Offline" VerticalAlignment="Bottom" Padding="20 10" FontSize="20" Click="DownloadOfflineMap" Visibility="Collapsed" Style="{DynamicResource ButtonStyle1}" />
        </Border>

        <!-- Drawing edit and restart buttons-->
        <StackPanel x:Name="pathDrawingControls" Margin="5,5,5,25" HorizontalAlignment="Center" VerticalAlignment="Bottom" Visibility="Visible" Orientation="Horizontal" Grid.Column="0">
            <!--Button Content="Edit" x:Name="editBtn" Margin="5" Padding="5" Click="EditButtonClick" FontSize="16" Visibility="Collapsed" />-->
            <Border x:Name="drawnLineStatusIndicator" BorderBrush="Red" BorderThickness="4"  CornerRadius="10" Background="White" VerticalAlignment="Center" Margin="5" HorizontalAlignment="Center" >
                <Border.Effect>
                    <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                </Border.Effect>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>
                    <Border BorderBrush="DarkGray" BorderThickness="0 0 1 1" Grid.Row="0" Grid.Column="0">
                        <TextBlock Text="Run Data:" Padding="5" FontSize="18"/>
                    </Border>
                    <Border BorderBrush="DarkGray" BorderThickness="1 0 0 1" Grid.Row="0" Grid.Column="1">
                        <TextBlock  Text="Drawn Path:" Padding="5" FontSize="18"/>
                    </Border>
                    <Border BorderBrush="DarkGray" BorderThickness="0 1 1 0 " Grid.Row="1" Grid.Column="0">
                        <TextBlock x:Name="pastRunDistTxt" Grid.Row="1" Grid.Column="0" Padding="5" FontSize="18"/>
                    </Border>
                    <Border BorderBrush="DarkGray" BorderThickness="1 1 0 0 " Grid.Row="1" Grid.Column="1">
                        <TextBlock x:Name="drawnRunDistTxt" Grid.Row="1" Grid.Column="1" Padding="5" FontSize="18"/>
                    </Border>

                </Grid>
            </Border>
            <Border CornerRadius="10" x:Name="undoBtn_border" Background="White" Margin="5" HorizontalAlignment="Center" >
                <Border.Effect>
                    <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                </Border.Effect>
                <Button Content="Undo" x:Name="undoBtn" Padding="10 5" FontSize="18" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Click="UndoLastVertex" Style="{DynamicResource ButtonStyle1}"/>
            </Border>
        </StackPanel>
        <Grid x:Name="progressIndicator" Background="#B2434343" Visibility="Collapsed" Grid.Column="0">
            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>
                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10"
                           Foreground="White" FontSize="20">
                    <Run x:Name="busyJobText" Text="Downloading offline map... "></Run>
                    <Run x:Name="Percentage" Text=""></Run>
                </TextBlock>
                <ProgressBar x:Name="progressBar"
                             Grid.Row="1" 
                             Minimum="0" Maximum="100"
                             IsEnabled="True" VerticalAlignment="Center" 
                             Height="10" Margin="0,0,0,10"
                             Foreground="LightGreen"
                             Background="#99000000"
                             BorderThickness="0"
                             BorderBrush="Transparent"/>
                <Button x:Name="CancelJobButton" 
                        Grid.Row="3"
                        Content="Cancel" 
                        Click="CancelJobButton_Click" 
                        HorizontalAlignment="Center" 
                        Padding="20 5"
                        FontSize="18"/>
            </Grid>
        </Grid>

        <Grid Grid.Column="1" x:Name="FullControlPanel" >
            <Grid.RowDefinitions>
                <RowDefinition Height="3*"/>
                <RowDefinition Height="5*"/>
                <RowDefinition Height="5*"/>
            </Grid.RowDefinitions>
            <Border Background="#EDF0F2" Padding="10" Grid.Row="0">
                <Grid Name="UserContentGrid" Grid.Row="0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Grid.Row="0">
                        <TextBlock x:Name="disconnectedFlagBox" Text="(Disconnected)" Visibility="Collapsed" Foreground="Crimson" VerticalAlignment="Center" FontSize="18" Margin="0,0,10,0"/>
                        <TextBlock x:Name="userNameBox" Text="" Visibility="Collapsed" VerticalAlignment="Center" FontSize="18"/>
                        <Image x:Name="profilePic" Visibility="Visible" Margin="5 0"/>
                        <Border x:Name="loginBtn_border" Background="#FF5CAADE" CornerRadius="10" Margin="5 0 0 0" BorderBrush="Transparent"  VerticalAlignment="Center">
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Button x:Name="loginBtn" Content="Login" Padding="10 5" BorderBrush="Transparent" BorderThickness="0" Click="LoginBtn_Click" Foreground="White"  FontSize="18" Background="Transparent" VerticalAlignment="Center" SnapsToDevicePixels="True" Style="{DynamicResource ButtonStyle1}"/>
                        </Border>
                    </StackPanel>

                    <TextBlock Name="PathMetTitle" FontSize="20" HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Row="1">
                        <Run Foreground="#0A6893" Text="WELCOME TO"/>
                        <Run Foreground="#0A6893" FontWeight="Bold" Text="PATHMET"/>
                    </TextBlock>
                    <Border Grid.Row="2">
                        <Grid x:Name="MapSyncInfoContainer" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="5*"/>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox x:Name="UserMapsBox" IsEnabled="False"  Grid.Column="0" SelectionChanged="MapChosen" Padding="10" FontSize="20" Margin="0 0 5 0" VerticalAlignment="Center">
                                <ComboBoxItem Content="-- Select Map --" IsSelected="True" Padding="10"/>
                            </ComboBox>
                            <TextBlock x:Name="MapSyncStatus" Grid.Column="1" Text="" TextAlignment="Center"  FontSize="20" Padding="5"  Margin="5 0" VerticalAlignment="Center"/>
                            <Border Background="#FF5CAADE" x:Name="SyncBtn_border" CornerRadius="10" Grid.Column="2" Margin="5 0 0 0" BorderBrush="Transparent"  VerticalAlignment="Center">
                                <Border.Effect>
                                    <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                                </Border.Effect>
                                <Button x:Name="SyncBtn" Grid.Column="2" Content="Sync" Click="Sync_Clicked" IsEnabled="False" Padding="5" Foreground="White"  VerticalAlignment="Center"  FontSize="20" Background="Transparent" BorderThickness="0" BorderBrush="Transparent" HorizontalAlignment="Stretch" Style="{DynamicResource ButtonStyle1}">
                                </Button>
                            </Border>
                        </Grid>
                    </Border>
                </Grid>
            </Border>
            <Border x:Name="RunContentGrid" Visibility="Visible"  Background="#D8DFE3" Padding="10" Grid.Row="1">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <Border CornerRadius="10" Padding="5" Background="White" Grid.Row="0" >
                        <Border.Effect>
                            <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                        </Border.Effect>
                        <Grid Name="sensorsBox"  Grid.Row="0" Margin="0">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <CheckBox Grid.Column="0" Template="{StaticResource sensorStatusCheckBox}" Content="PathMet" Name="chkbxPm" Background="Red" IsHitTestVisible="False" FontSize="20"/>
                            <CheckBox Grid.Column="1" Template="{StaticResource sensorStatusCheckBox}" Content="Laser" Name="chkbxL" IsHitTestVisible="False" FontSize="20"/>
                            <CheckBox Grid.Column="2" Template="{StaticResource sensorStatusCheckBox}" Content="Camera" Name="chkbxC" IsHitTestVisible="False" FontSize="20"/>
                            <CheckBox Grid.Column="3" Template="{StaticResource sensorStatusCheckBox}" Content="IMU" Name="chkbxI" IsHitTestVisible="False" FontSize="20" />
                            <CheckBox Grid.Column="4" Template="{StaticResource sensorStatusCheckBox}" Content="Encoder" Name="chkbxE" IsHitTestVisible="False" FontSize="20"/>
                        </Grid>
                    </Border>

                    <Border CornerRadius="10" Background="White" Margin="2" BorderBrush="Transparent" BorderThickness="0"  Grid.Row="1" VerticalAlignment="Center" >
                        <Border.Effect>
                            <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                        </Border.Effect>
                        <TextBox IsEnabled="True" x:Name="txtFName" Padding="5 10" BorderBrush="Transparent" BorderThickness="0" VerticalContentAlignment="Center" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" TextAlignment="Center">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=txtFName,Path=Text}" Value="" >
                                            <Setter Property="Background" Value="{StaticResource RunNameHint}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=txtFName,Path=IsEnabled}" Value="False" >
                                            <Setter Property="Background" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Border>



                    <Border CornerRadius="10" Background="White" Padding="10,10" Grid.Row="2">
                        <Border.Effect>
                            <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                        </Border.Effect>
                        <Grid Name="RunControlsGrid" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="3*"/>
                                <ColumnDefinition Width="2*"/>
                                <ColumnDefinition Width="3*"/>
                            </Grid.ColumnDefinitions>

                            <Button x:Name="pmStart" Grid.Column="0"  Click="OnStart" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Stretch="Uniform" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,10,15,10">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="icon_start.png"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=pmStart, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Source" Value="icon_start_disabled.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock Text="Start" Grid.Column="1" HorizontalAlignment="Center" FontSize="22" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="#5CAADE"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=pmStart, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>

                            <Button x:Name="btnStop" Grid.Column="2" Click="OnStop" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" VerticalAlignment="Stretch">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="*"/>
                                    </Grid.ColumnDefinitions>
                                    <Image Stretch="Uniform" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="10,10,15,10">
                                        <Image.Style>
                                            <Style TargetType="Image">
                                                <Setter Property="Source" Value="icon_stop.png"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=btnStop, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Source" Value="icon_stop_disabled.png"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Image.Style>
                                    </Image>
                                    <TextBlock Text="Stop" Grid.Column="1" HorizontalAlignment="Center" FontSize="22" VerticalAlignment="Center" SnapsToDevicePixels="True">
                                        <TextBlock.Style>
                                            <Style TargetType="TextBlock">
                                                <Setter Property="Foreground" Value="#5CAADE"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=btnStop, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Grid>
                    </Border>

                    <Border CornerRadius="10" x:Name="btnRetryPmConnect_border" Background="White" Margin="0 10 0 0"  Grid.Row="3" HorizontalAlignment="Center" VerticalAlignment="Center" >
                        <Border.Effect>
                            <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                        </Border.Effect>
                        <Button Content="Reset pathMet connection" Padding="10" Grid.Row="3" Name="btnRetryPmConnect" BorderBrush="Transparent" BorderThickness="0" Background="Transparent" Click="RetryPmConnection_Click" HorizontalAlignment="Center" FontSize="20" VerticalAlignment="Center" SnapsToDevicePixels="True" Style="{DynamicResource ButtonStyle1}"/>
                    </Border>
                </Grid>
            </Border>
            <Border x:Name="PostRunControlsPanel" Visibility="Collapsed"  Background="#D8DFE3" Padding="10" Grid.Row="1">
                <Grid Grid.Row="1" Visibility="Visible">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="2*"/>
                    </Grid.RowDefinitions>
                    <TextBlock HorizontalAlignment="Center" FontWeight="Bold" Margin="0,10" Foreground="#0A6893" FontSize="20" Grid.Row="0">POST-RUN CONTROLS</TextBlock>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Background="White" x:Name="reviewBtn_border" Grid.Column="0" Margin="20" CornerRadius="10" BorderBrush="Transparent" >
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Button Content="Review Images" x:Name="reviewBtn" Padding="5,15" Click="ReviewBtn_Click" FontSize="20" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Style="{DynamicResource ButtonStyle1}" />
                        </Border>
                        <Border Background="White" Grid.Column="1" Margin="20" CornerRadius="10" BorderBrush="Transparent" >
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Button Content="Discard Run" x:Name="discardBtn" Padding="5,15" Click="OnDiscard" FontSize="20" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Style="{DynamicResource ButtonStyle1}"/>
                        </Border>
                    </Grid>
                    <Grid Grid.Row="2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Border Grid.Column="1" Margin="10" CornerRadius="10" BorderBrush="Transparent" >
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Border.Style>
                                <Style TargetType="{x:Type Border}">
                                    <Setter Property="Background" Value="#FF5CAADE"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=submitBtn, Path=IsEnabled}" Value="False">
                                            <Setter Property="Background" Value="White"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Border.Style>
                            <Button Foreground="White" Content="Submit Run" x:Name="submitBtn" Click="OnSubmit" FontSize="20" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Style="{DynamicResource ButtonStyle1}">
                            </Button>
                        </Border>
                    </Grid>
                </Grid>
            </Border>
            <Border Background="#EDF0F2" Padding="10" Grid.Row="2">
                <Grid  Name="RunEventsPanel" Grid.Row="2"  Background="#EDF0F2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="2*"/>
                        <RowDefinition Height="3*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Text="OBSTACLES" HorizontalAlignment="Center" FontWeight="Bold"  FontSize="20" Foreground="#0A6893" VerticalAlignment="Center"/>
                    <Grid Name="ObstacleGrid" Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Border Name="btnTrippingHazard_Container" Background="#FF5CAADE" CornerRadius="10" Margin="0,0,10,0" Grid.Column="0" BorderBrush="Transparent">
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Button Margin="0" Name="btnTrippingHazard"  ScrollViewer.CanContentScroll="True" Click="BtnTrippingHazard_Click" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Style="{DynamicResource ButtonStyle1}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="7*"/>
                                        <RowDefinition Height="3*"/>
                                    </Grid.RowDefinitions>
                                    <Image Source="icon_tripping_hazard.png" Stretch="Uniform" Grid.Row="0" Margin="0 5 0 0"/>
                                    <TextBlock x:Name="tripHazardTxt" Text="Tripping Hazard" Grid.Row="1" FontSize="20" TextAlignment="Center" SnapsToDevicePixels="True">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=btnTrippingHazard, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Border>
                        <Border Name="btnBrokenSidewalk_Container" Background="#FF5CAADE" CornerRadius="10" Margin="0 0 5 0" Grid.Column="1">
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Button Margin="0" Name="btnBrokenSidewalk" ScrollViewer.CanContentScroll="True" Click="BtnBrokenSidewalk_Click" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Style="{DynamicResource ButtonStyle1}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="7*"/>
                                        <RowDefinition Height="3*"/>
                                    </Grid.RowDefinitions>
                                    <Image Source="icon_broken_sidewalk.png" Stretch="Uniform" Grid.Row="0" Margin="0 5 0 0"/>
                                    <TextBlock Text="Broken Sidewalk" Grid.Row="1" FontSize="20" TextAlignment="Center" SnapsToDevicePixels="True">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=btnBrokenSidewalk, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Border>
                        <Border Name="btnVegetation_Container" Background="#FF5CAADE" CornerRadius="10" Margin="5 0 0 0" Grid.Column="2">
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Button Margin="0 0 0 0" Name="btnVegetation" ScrollViewer.CanContentScroll="True" Click="BtnVegetation_Click" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" Style="{DynamicResource ButtonStyle1}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="7*"/>
                                        <RowDefinition Height="3*"/>
                                    </Grid.RowDefinitions>
                                    <Image Source="icon_vegetation.png" Stretch="Uniform" Grid.Row="0" Margin="0 5 0 0"/>
                                    <TextBlock Text="Vegetation" Grid.Row="1" FontSize="20"  TextAlignment="Center" SnapsToDevicePixels="True">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=btnVegetation, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Border>
                        <Border Name="btnOther_Container" Background="#FF5CAADE" CornerRadius="10" Margin="10 0 0 0" Grid.Column="3">
                            <Border.Effect>
                                <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                            </Border.Effect>
                            <Button Margin="0" Name="btnOther" ScrollViewer.CanContentScroll="True" Click="BtnOther_Click" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" HorizontalAlignment="Stretch" Style="{DynamicResource ButtonStyle1}">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="7*"/>
                                        <RowDefinition Height="3*"/>
                                    </Grid.RowDefinitions>
                                    <Image Source="icon_other.png" Stretch="Uniform" Grid.Row="0" Margin="0 5 0 0"/>
                                    <TextBlock Text="Other" Grid.Row="1" FontSize="20" TextAlignment="Center" SnapsToDevicePixels="True">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Setter Property="Foreground" Value="White"/>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding ElementName=btnOther, Path=IsEnabled}" Value="False">
                                                        <Setter Property="Foreground" Value="White"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </Grid>
                            </Button>
                        </Border>
                    </Grid>
                    <Border CornerRadius="10" Background="White"  Padding="5" Margin="0 10 0 0" Grid.Row="2" >
                        <Border.Effect>
                            <DropShadowEffect Direction="225" Opacity="0.2" BlurRadius="10" ShadowDepth="3"/>
                        </Border.Effect>
                        <TextBox x:Name="CommentBox" Grid.Column="1" FontSize="16" BorderThickness="0">
                            <TextBox.Style>
                                <Style TargetType="{x:Type TextBox}">
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=CommentBox,Path=Text}" Value="" >
                                            <Setter Property="Background" Value="{StaticResource CommentBoxHint}"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding ElementName=CommentBox,Path=IsEnabled}" Value="False">
                                            <Setter Property="Background" Value="LightGray"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>
                    </Border>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</Window>
